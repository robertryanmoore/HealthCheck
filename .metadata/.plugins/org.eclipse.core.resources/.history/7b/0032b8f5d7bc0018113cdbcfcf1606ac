import java.awt.AWTException;
import java.awt.Image;
import java.awt.MenuItem;
import java.awt.PopupMenu;
import java.awt.SystemTray;
import java.awt.Toolkit;
import java.awt.TrayIcon;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class Tray {

	public static void main(String args[]) {
		Tray();
	}

	public static void Tray() {
		TrayIcon trayIcon = null;

		if (SystemTray.isSupported()) {

			// get the SystemTray instance
			SystemTray tray = SystemTray.getSystemTray();

			// load an image
			Image image = Toolkit.getDefaultToolkit()
					.getImage("C:\\Code\\Java\\Selenium\\InvokeBrower\\src\\image\\logo.gif");

			// create a action listener to listen for default action executed on
			// the tray icon
			ActionListener listener = new ActionListener() {
				public void actionPerformed(ActionEvent e) {
					Chrome healthCheck = new Chrome();
					healthCheck.healthCheck();
				}
			};

			ActionListener exitAction = new ActionListener() {
				public void actionPerformed(ActionEvent e) {
					System.exit(0);
				}
			};

			// create a popup menu
			PopupMenu popup = new PopupMenu();

			// create menu item for the default action
			MenuItem defaultItem = new MenuItem("Run health check");
			defaultItem.addActionListener(listener);
			popup.add(defaultItem);

			// exit option
			MenuItem exitItem = new MenuItem("Exit");
			exitItem.addActionListener(exitAction);
			popup.add(exitItem);

			// construct a TrayIcon
			trayIcon = new TrayIcon(image, "Health Check", popup);
			// set the TrayIcon properties
			trayIcon.addActionListener(listener);
			// add the tray image
			try {
				tray.add(trayIcon);
			} catch (AWTException e) {
				System.err.println(e);
			}

		}

	}

}
